@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model DccTestWebApp.Models.GovUkAddressExperimental

@{
    ViewData["Title"] = "GovUK Create Experimental";
}

<h1>Create</h1>

<h4>Address</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        @(Html.GovUkErrorSummary(ViewData.ModelState))
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        @(Html.GovUkErrorSummary())
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateExperimental">
            @(Html.AntiForgeryToken())
            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Submit",
                Classes = "govuk-!-margin-bottom-4"
            }))

            @(Html.GovUkCharacterCountFor(
                m => m.BinderCountedString,
                labelOptions: new LabelViewModel
                {
                    Text = "Fill in some binder counted text",
                    Classes = "govuk-label--m"
                },
                formGroupOptions: new FormGroupViewModel
                {
                    Classes = "govuk-!-margin-top-6"
                }
            ))

            @(Html.GovUkCharacterCountFor(
                m => m.Child.ChildCountedString,
                labelOptions: new LabelViewModel
                {
                    Text = "Fill in some child counted text",
                    Classes = "govuk-label--m"
                },
                formGroupOptions: new FormGroupViewModel
                {
                    Classes = "govuk-!-margin-top-6"
                }
            ))

            @(Html.GovUkCheckboxesFor(
                m => m.BinderValidatedCheckboxes,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Binder validated checkboxes",
                        Classes = "govuk-fieldset__legend--m"
                    },
                    Classes = "govuk-!-margin-top-6"
                }
            ))

            @(Html.GovUkCheckboxesFor(
                m => m.Child.ChildCheckboxes,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Child checkboxes",
                        Classes = "govuk-fieldset__legend--m"
                    },
                    Classes = "govuk-!-margin-top-6"
                }
            ))


            @(Html.GovUkRadiosFor(
                m => m.BinderValidatedRadio,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Binder validated radio options",
                        Classes = "govuk-fieldset__legend--m"
                    },
                    Classes = "govuk-!-margin-top-6"
                }
            ))

            @(Html.GovUkRadiosFor(
               m => m.Child.ChildValidatedRadio,
               fieldsetOptions: new FieldsetViewModel
               {
                   Legend = new LegendViewModel
                   {
                       Text = "Child radio options",
                       Classes = "govuk-fieldset__legend--m"
                   },
                   Classes = "govuk-!-margin-top-6"
               }
            ))

            @(Html.GovUkTextInputFor(
                m => m.BinderValidatedInt,
                labelOptions: new LabelViewModel
                {
                    Text = "Mandatory Int"
                },
                classes: "govuk-input--width-10 govuk-!-margin-right-2 govuk-!-margin-bottom-2"
            ))

            @(Html.GovUkTextInputFor(
                m => m.Child.ChildInt,
                labelOptions: new LabelViewModel
                {
                    Text = "Child Int"
                },
                classes: "govuk-input--width-10 govuk-!-margin-right-2 govuk-!-margin-bottom-2"
            ))

            @(Html.GovUkTextInputFor(
                m => m.BinderValidatedString,
                labelOptions: new LabelViewModel
                {
                    Text = "Model state string"
                },
                classes: "govuk-input--width-10 govuk-!-margin-right-2 govuk-!-margin-bottom-2"
            ))

            @(Html.GovUkTextInputFor(
                m => m.Child.ChildString,
                labelOptions: new LabelViewModel
                {
                    Text = "Child string"
                },
                classes: "govuk-input--width-10 govuk-!-margin-right-2 govuk-!-margin-bottom-2"
            ))

            @(Html.GovUkTextAreaFor(
                m => m.BinderValidatedTextArea,
                labelOptions: new LabelViewModel
                {
                    Text = "Model state text area"
                }
            ))

            @(Html.GovUkTextAreaFor(
                m => m.Child.ChildTextArea,
                labelOptions: new LabelViewModel
                {
                    Text = "Child text area"
                }
            ))
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

